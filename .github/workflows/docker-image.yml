name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      OWNER: teuusername    # em lowercase, literal
    outputs:
      gateway_image: ${{ steps.set-images.outputs.gateway_image }}
      shortener_image: ${{ steps.set-images.outputs.shortener_image }}

    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2

      - name: Login no GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build & Push gateway
        id: build-gateway
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./services/gateway/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.OWNER }}/gateway:latest
            ghcr.io/${{ env.OWNER }}/gateway:${{ github.sha }}

      - name: Build & Push shortener
        id: build-shortener
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./services/shortener/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.OWNER }}/shortener:latest
            ghcr.io/${{ env.OWNER }}/shortener:${{ github.sha }}

      - name: Definir outputs das imagens
        id: set-images
        run: |
          echo "::set-output name=gateway_image::ghcr.io/${{ env.OWNER }}/gateway:${{ github.sha }}"
          echo "::set-output name=shortener_image::ghcr.io/${{ env.OWNER }}/shortener:${{ github.sha }}"


  deploy:
      needs: build
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
  
        - name: Carregar chave SSH
          uses: webfactory/ssh-agent@v0.5.4
          with:
            ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
            # ssh-passphrase: ${{ secrets.SSH_PASSPHRASE }}  se houver
  
        - name: Configurar SSH para Proxy
          run: |
            mkdir -p ~/.ssh
            cat << 'EOF' > ~/.ssh/config
            Host target-server
              HostName sftp
              User sftp
              ProxyCommand openssl s_client -connect maruqes.com:10512 -servername sftp.maruqes.com -quiet
              StrictHostKeyChecking no
              UserKnownHostsFile /dev/null
            EOF
            chmod 600 ~/.ssh/config
  
        - name: Deploy via SSH
          run: |
            ssh target-server << 'EOF'
              docker pull ${{ needs.build.outputs.gateway_image }}
              docker pull ${{ needs.build.outputs.shortener_image }}
              # usar k3s kubectl ou configurar kubeconfig
              sudo k3s kubectl apply -f /home/sftp/workspace/k8s/
            EOF
  
            EOF
  
    
