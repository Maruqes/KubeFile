name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    # força o teu namespace GHCR em lowercase
    env:
      OWNER: maruqes

    steps:
      - name: Fazer checkout do código
        uses: actions/checkout@v3

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login no GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Construir e enviar imagem do gateway
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./services/gateway/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.OWNER }}/gateway:latest
            ghcr.io/${{ env.OWNER }}/gateway:${{ github.sha }}

      - name: Construir e enviar imagem do shortener
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./services/shortener/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.OWNER }}/shortener:latest
            ghcr.io/${{ env.OWNER }}/shortener:${{ github.sha }}

      - name: Definir variáveis de ambiente para deploy
        run: |
          echo "GATEWAY_IMAGE=ghcr.io/${{ env.OWNER }}/gateway:${{ github.sha }}" >> $GITHUB_ENV
          echo "SHORTENER_IMAGE=ghcr.io/${{ env.OWNER }}/shortener:${{ github.sha }}" >> $GITHUB_ENV

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Disparar deploy via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.HOME_SERVER_HOST }}
          username: ${{ secrets.HOME_SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            docker pull $GATEWAY_IMAGE
            docker pull $SHORTENER_IMAGE
            kubectl --kubeconfig=/home/${{ secrets.HOME_SERVER_USER }}/.kube/config apply -f k8s/
